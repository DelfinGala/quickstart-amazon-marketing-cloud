AWSTemplateFormatVersion: "2010-09-09"
Description: "Contains all the resources necessary for a single pipeline"

Parameters:
  pPipelineName:
    Description: "The name of the Pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]{2,10}'
  pMicroserviceName:
    Description: "The name of the team owning the pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]{2,12}'
  pTeamName:
    Description: "Name of the team owning the pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]*'
  pEnvironment:
    Description: "Name of the environment (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]*'
  pKMSKeyId:
    Type: String
    Default: "/SDLF/KMS/KeyArn"
  # pPowerToolsLibLayer:
  #   Type: String
  #   Description: "The ARN of the latest Datalake Library Lambda Layer"
  #   Default: "/SDLF/Lambda/${pTeamName}/PowerTools"
#  pDynamoDBCustomerTargetConfig: Reference to workflow service table for lambda input

Resources:
  ######## INIT TEMPLATE #########

  ####### DynamoDB Stack #######
  rDynamoDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-dynamo.yaml
      Parameters:
        pMicroserviceName: !Ref pMicroserviceName
        pTeamName: !Ref pTeamName
        pPipelineName: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        pKMSKeyId: !Sub '{{resolve:ssm:${pKMSKeyId}}}'
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  ####### DynamoDB Stack #######
  # rKMSStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested-stacks/template-kms.yaml
  #     Parameters:
  #       pMicroserviceName: !Ref pMicroserviceName
  #       pTeamName: !Ref pTeamName
  #       pPipelineName: !Ref pPipelineName
  #       pEnvironment: !Ref pEnvironment
  #     Tags:
  #       - Key: 'tagging-policy'
  #         Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  ####### SNS Stack #######
  rSNSTopicStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-sns.yaml
      Parameters:
        pMicroserviceName: !Ref pMicroserviceName
        pTeamName: !Ref pTeamName
        pPipelineName: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        pSNSIntegrationKeyAlias: !Sub '{{resolve:ssm:${pKMSKeyId}}}'
        # pSNSIntegrationKey: !GetAtt ["rKMSStack", "Outputs.oSNSIntegrationKey" ]

      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  ####### SQS Stack #######
  rSQSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-sqs.yaml
      Parameters:
        pMicroserviceName: !Ref pMicroserviceName
        pTeamName: !Ref pTeamName
        pPipelineName: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        pSQSIntegrationKeyAlias: !Sub '{{resolve:ssm:${pKMSKeyId}}}'
        pCustomerConfigSNSTopic: !GetAtt ["rSNSTopicStack", "Outputs.oCustomerConfigSNSTopic"]
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  ####### IAM Stack #######
  rIAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-iam.yaml
      Parameters:
        pMicroserviceName: !Ref pMicroserviceName
        pTeamName: !Ref pTeamName
        pPipelineName: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        # pTenantTable: !GetAtt [ "rDynamoDBStack", "Outputs.oTenantTableName" ]
        # pTenantTableNameSSM: !GetAtt [ "rDynamoDBStack", "Outputs.oTenantTableNameSSM" ]
        pCustomerConfigSNSTopic: !GetAtt [ "rSNSTopicStack", "Outputs.oCustomerConfigSNSTopic"]
        pCustomerConfigTableName: !GetAtt [ "rDynamoDBStack", "Outputs.oCustomerConfigTableName" ]
        # pTenantConfigSNSTopic: !GetAtt [ "rSNSTopicStack", "Outputs.oTenantConfigSNSTopic"]
        pKMSKeyId: !Sub '{{resolve:ssm:${pKMSKeyId}}}'
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  ####### Lambda Stack #######
  rLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-lambda.yaml
      Parameters:
        pMicroserviceName: !Ref pMicroserviceName
        pTeamName: !Ref pTeamName
        pPipelineName: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        pPowerToolsLibLayer: !Sub '{{resolve:ssm:/SDLF/Lambda/${pTeamName}/PowerTools}}'
        # pTenantLambdaIamRole: !GetAtt [ "rIAMStack", "Outputs.oLambdaTenantRole" ]
        # pDynamoDBTenantStream: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBTenantStream" ]
        # pTenantTableNameSSM: !GetAtt [ "rDynamoDBStack", "Outputs.oTenantTableNameSSM" ]
        pCustomerConfigSNSTopic: !GetAtt [ "rSNSTopicStack", "Outputs.oCustomerConfigSNSTopic"]
        # pLambdaTenantConfigDynamoDBTriggerRole: !GetAtt ["rIAMStack", "Outputs.oLambdaTenantConfigDynamoDBTriggerRole"]
        pDynamoDBCustomerConfigStream : !GetAtt ["rDynamoDBStack", "Outputs.oDynamoDBCustomerConfigStream"]
        pRoleLambdaCustomerConfigDynamoDBTrigger: !GetAtt ["rIAMStack", "Outputs.oRoleLambdaCustomerConfigDynamoDBTrigger"] 
        # pTenantConfigSNSTopic: !GetAtt [ "rSNSTopicStack", "Outputs.oTenantConfigSNSTopic"]
        pStateMachineSsm: !GetAtt [ "rAmcOnboardingStack", "Outputs.oStateMachineSsm"]
        pSQSQueue: !GetAtt [ "rSQSStack", "Outputs.oSQSQueue"]
        pRoleLambdaAMCInstanceStateMachine: !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaAMCInstanceStateMachine"]
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  ####### AMC Onboarding Stack #######
  rAmcOnboardingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-amc-onboarding.yaml
      Parameters:
        pMicroserviceName: !Ref pMicroserviceName
        pTeamName: !Ref pTeamName
        pPipeline: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        pPowerToolsLibLayer: !Sub '{{resolve:ssm:/SDLF/Lambda/${pTeamName}/PowerTools}}'
        pKMSKeyId: !Sub '{{resolve:ssm:${pKMSKeyId}}}'
        pDatalakeLibLayer: !Sub '{{resolve:ssm:/SDLF/Lambda/${pTeamName}/LatestDatalakeLibraryLayer}}'
        pCustomerConfigSNSTopic: !GetAtt [ "rSNSTopicStack", "Outputs.oCustomerConfigSNSTopic"]
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

