AWSTemplateFormatVersion: "2010-09-09"
Description: "Resources to be created by the pipeline stack"

Parameters:
  pPipelineName:
    Description: "The name of the Pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]{2,10}'
  pMicroserviceName:
    Description: "The name of the team owning the pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]{2,12}'
  pTeamName:
    Description: "Name of the team owning the pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]*'
  pEnvironment:
    Description: "Name of the environment (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]*'
  pSQSIntegrationKeyAlias:
    Description: "Name of KMS Key Alias"
    Type: String
  pCustomerConfigSNSTopic:
    Description: "SNS Topic Arn"
    Type: String


Resources:
###### SQS Customer Config subscription Dead-letter Queue ######
  rQueueDeadLetterQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment, "CustomerAMCInstanceOnboarding", "queue","DLQ.fifo"]]
      FifoQueue: true
      KmsMasterKeyId: !Ref pSQSIntegrationKeyAlias
      ContentBasedDeduplication: true
      VisibilityTimeout: 30
      DelaySeconds: 10
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment, "common"]]

###### SQS Customer Config subscription Queue ######
  rSQSQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment, "CustomerAMCInstanceOnboarding", "queue.fifo"]]
      FifoQueue: true
      KmsMasterKeyId: !Ref pSQSIntegrationKeyAlias
      ContentBasedDeduplication: true
      RedrivePolicy : !Sub '{ "deadLetterTargetArn" : "${rQueueDeadLetterQueue.Arn}", "maxReceiveCount" : 10 }'
      VisibilityTimeout: 30
      DelaySeconds: 10
      Tags:
        - Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment, "common"]]

#SQS Subscribe SNS topic
  rQueueSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt rSQSQueue.Arn
      Protocol: "sqs"
      TopicArn: !Ref pCustomerConfigSNSTopic

######SQS Queue Policy*######
  rEncryptedQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 'sns.amazonaws.com'
            Action:
              - SQS:SendMessage
            Resource: !GetAtt rSQSQueue.Arn
            Condition:
              StringEquals:
                aws:SourceArn: !Ref pCustomerConfigSNSTopic
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS:
                Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
            Action: sqs:*
            Resource: '*'
          # - Sid: Enable Codebuild to Modify
          #   Effect: Allow
          #   Principal:
          #     AWS:
          #       Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/sdlf-${pMicroserviceName}-cicd-codebuild
          #   Action: sqs:*
          #   Resource: '*'
      Queues:
        - !Ref rSQSQueue
Outputs:
  oSQSQueue:
    Description: "Arn of fifo AMC Instance setup SQS queue"
    Value: !GetAtt rSQSQueue.Arn
  oDeadLetterQueue:
    Description: "Arn of fifo AMC Instance setup Dead Letter Queue SQS queue"
    Value: !GetAtt rQueueDeadLetterQueue.Arn