AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Creating SAW Client Manager Notebook instances"

Parameters:

  artifactBucket:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/CFNBucket

Resources:
   ######## KMS #########
  rSagemakerInstanceKey:
    Type: "AWS::KMS::Key"
    DeletionPolicy: Retain
    Properties:
      Description: "KMS Key for SageMaker Notebook Instance"
      EnableKeyRotation: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: "sagemakerNotebookInstanceKey"
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow Sagemaker access
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - "kms:DescribeKey"
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:CreateGrant"
            Resource: "*"
            Condition:
              StringEquals:
                "kms:CallerAccount": !Ref AWS::AccountId
                "kms:ViaService": !Sub sagemaker.amazonaws.com
              Bool:
                "kms:GrantIsForAWSResource": "true"
         
  rSagemakerInstanceKeyAlias:
    Type: "AWS::KMS::Alias"
    Properties:
      AliasName: !Sub "alias/sagemaker-demo-cm"
      TargetKeyId: !Ref rSagemakerInstanceKey

  ######## Sagemaker Role ########
  rSagemakerInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "sagemakerDemoExecutionRole-${AWS::Region}"
      Path: "/service-role/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "sagemaker.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
      Policies:
        - PolicyName: "executionPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: 
                  - "arn:aws:s3:::SageMaker"
                  - !Sub "arn:aws:s3:::${artifactBucket}"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: 
                  - "arn:aws:s3:::SageMaker/*"
                  - !Sub "arn:aws:s3:::${artifactBucket}/*"
              - Effect: Allow
                Action:
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                  - "kms:ReEncrypt*"
                  - "kms:GenerateDataKey*"
                  - "kms:DescribeKey"
                  - "kms:List*"
                  - "kms:Describe*"
                Resource:
                  - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                Resource:
                  - "arn:aws:dynamodb:*:*:table/sdlf-*"
                  - "arn:aws:dynamodb:*:*:table/tps-*"
                  - "arn:aws:dynamodb:*:*:table/wfm-*"
              - Resource: "*"
                Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:PutParameter
                  - ssm:UpdateServiceSetting

  ######## Sagemaker Notebook Instance LifecycleConfig #########
  rSagemakerNotebookInstanceLifecycleConfig:
    Type: 'AWS::SageMaker::NotebookInstanceLifecycleConfig'
    Properties:
      NotebookInstanceLifecycleConfigName: 'saw-platform-manager-lc'
      OnCreate:
        - Content:
            Fn::Base64: |
              #!/bin/bash
              
              set -e
              S3_BUCKET=$(sed -e 's/^"//' -e 's/"$//' <<<"$(aws ssm get-parameter --name /SDLF/S3/CFNBucket --query "Parameter.Value")")
              aws s3 sync s3://$S3_BUCKET/platform_notebook_manager_samples/ /home/ec2-user/SageMaker/

  ######## Sagemaker Notebook Instance #########
  rSagemakerNotebookInstance:
    Type: 'AWS::SageMaker::NotebookInstance'
    Properties:
      InstanceType: 'ml.t2.medium'
      KmsKeyId: !GetAtt rSagemakerInstanceKey.Arn
      LifecycleConfigName: !GetAtt rSagemakerNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: "saw-platform-manager"
      RoleArn: !GetAtt rSagemakerInstanceRole.Arn
      RootAccess: 'Enabled'

  