AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Contains all the resources necessary for the workflow management microservice"

Parameters:
  pTeamName:
    Description: "Name of the Team that owns the service Instance"
    Type: String
    AllowedPattern: '[a-z0-9]{2,10}'
  pMicroserviceName:
    Description: "Name of the Service being Deployed"
    Type: String
    AllowedPattern: '[a-z0-9]{2,12}'
  pEnvironment:
    Description: "Environment name."
    Type: String
    AllowedValues: ["dev", "test", "prod"]
  pAnalyticsBucketARN:
    Description: "ARN of analytics bucket that was created by the AMC Quickstart cloud formation template"
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/AnalyticsBucket
  pAMCGlueDataCatalogName:
    Description: "Name of the Glue Data Catalog that was created by the AMC Quickstart Cloud Formation Template"
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/AthenaBucket
  pStagingBucketARN:
    Description: "Name of the Staging bucket that contains the data for the glue data catalog"
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/StageBucket
  pSnsEmailSubscriber:
    Description: The email address that receives notifications from the created SNS topic.
    Type: String
    Default: nobody@nobody.com
  pPipelineName:
    Description: "The name of the Pipeline (all lowercase, no symbols or spaces)"
    Type: String
    AllowedPattern: '[a-z0-9]{2,10}'
  # pPowerToolsLibLayer:
  #   Type: "AWS::SSM::Parameter::Value<String>"
  #   Description: "The ARN of the latest Datalake Library Lambda Layer"
  #   Default: /SDLF/S3/AthenaBucket
  pAthenaResultsS3BucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/AthenaBucket
  # pTPSIntegrationKMSKeyARN:
  #   Type: String
  # pWLSIntegrationKMSKeyARN:
  #   Type: String
  pKMSKeyId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/KMS/KeyArn
  pDatasetName:
    Description: "The Dataset Name"
    Type: String


Globals:
  Function:
      Handler: lambda_function.lambda_handler

Resources:

  ######## Athena #########
  rAthenaWorkgroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-athena.yaml
      Parameters:
        pTeamName: !Ref pTeamName
        pMicroserviceName: !Ref pMicroserviceName
        pPipelineName: !Ref pPipelineName
        pAthenaResultsS3BucketName: !Ref pAthenaResultsS3BucketName
        pEnvironment: !Ref pEnvironment
      Tags:
        -
          Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

  # ######## DynamoDB #########
  rDynamoDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-dynamodb.yaml
      Parameters:
        pTeamName: !Ref pTeamName
        pMicroserviceName: !Ref pMicroserviceName
        pPipelineName: !Ref pPipelineName
        pKMSKeyId: !Ref pKMSKeyId
      Tags:
        -
          Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]
  
#   ######## KMS #########
#   rKMSStack:
#     Type: AWS::CloudFormation::Stack
#     Properties:
#       TemplateURL: ./nested-stacks/template-kms.yaml
#       Parameters:
#         pTeamName: !Ref pTeamName
#         pMicroserviceName: !Ref pMicroserviceName
#         pPipelineName: !Ref pPipelineName
#       Tags:
#         -
#           Key: 'tagging-policy'
#           Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

#   ######## SQS #########
  # rSQSStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./nested-stacks/template-sqs.yaml
  #     Parameters:
  #       pTeamName: !Ref pTeamName
  #       pMicroserviceName: !Ref pMicroserviceName
  #       pPipelineName: !Ref pPipelineName
  #       pEnvironment: !Ref pEnvironment
  #       # pSNSSQSKeyAlias : !GetAtt [ "rKMSStack", "Outputs.oSNSSQSKeyAlias" ]
  #       pSNSSQSKeyAlias : !Ref pKMSKeyId
  #     Tags:
  #       -
  #         Key: 'tagging-policy'
  #         Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

#   ######## IAM #########
  rIAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-iam.yaml
      Parameters:
        pTeamName: !Ref pTeamName
        pMicroserviceName: !Ref pMicroserviceName
        pEnvironment: !Ref pEnvironment
        pAnalyticsBucketARN: !Ref pAnalyticsBucketARN
        pAMCGlueDataCatalogName: !Sub '{{resolve:ssm:/SDLF/Glue/${pTeamName}/${pDatasetName}/StageDataCatalog}}'
        pStagingBucketARN: !Ref pStagingBucketARN
        pPipelineName: !Ref pPipelineName
        pDynamoDBCustomerConfig : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBCustomerConfig" ]
        pDynamoDBCustomerConfigStreamArn: !GetAtt  [ "rDynamoDBStack", "Outputs.oDynamoDBCustomerConfigStreamArn"]
        pDynamoDBAMCExecutionStatus: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCExecutionStatus" ]
        pDynamoDBAMCExecutionStatusStreamArn: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCExecutionStatusStreamArn" ]
        pDynamoDBAMCWorkflows : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflows" ]
        pDynamoDBAMCWorkflowsStreamArn : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowsStreamArn" ]  
        pDynamoDBAMCWorkflowSchedules : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowSchedules" ]
        pDynamoDBAMCWorkflowSchedulesStreamArn : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowSchedulesStreamArn" ]
        # pCustomerConfigQueue:  !GetAtt ["rSQSStack", "Outputs.oCustomerConfigQueue" ]
        # pWorkflowLibraryQueue:  !GetAtt ["rSQSStack", "Outputs.oWorkflowLibraryQueue" ]
        pSNSSQSKey: !Ref pKMSKeyId
        pDynamoDBAMCWorkflowLibrary: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowLibrary" ] 
        pDynamoDBAMCWorkflowLibraryStreamArn: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowLibraryStreamArn" ]
        pAthenaResultsS3BucketName: !Ref pAthenaResultsS3BucketName
        pAthenaWorkGroup: !GetAtt [ "rAthenaWorkgroupStack", "Outputs.oAthenaWorkGroupName" ]
        pAthenaWorkGroupS3OutputLocation: !GetAtt [ "rAthenaWorkgroupStack", "Outputs.oAthenaWorkGroupS3OutputLocation" ]
        pTPSIntegrationKMSKeyARN: !Ref pKMSKeyId
        pWLSIntegrationKMSKeyARN: !Ref pKMSKeyId


        pSnsTopic: !Ref rSnsTopic
#       Tags:
#         -
#           Key: 'tagging-policy'
#           Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]


#   ######## Lambda #########
  rLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-lambda.yaml
      Parameters:
        pTeamName: !Ref pTeamName
        pMicroserviceName: !Ref pMicroserviceName
        pPipelineName: !Ref pPipelineName
        pEnvironment: !Ref pEnvironment
        pDynamoDBCustomerConfig : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBCustomerConfig" ]
        pDynamoDBCustomerConfigStreamArn : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBCustomerConfigStreamArn" ]
        pDynamoDBAMCExecutionStatus: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCExecutionStatus" ]
        pDynamoDBAMCExecutionStatusStreamArn: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCExecutionStatusStreamArn" ]
        pDynamoDBAMCWorkflows : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflows" ]   
        pDynamoDBAMCWorkflowsStreamArn : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowsStreamArn" ]  
        pDynamoDBAMCWorkflowSchedules : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowSchedules" ]
        pDynamoDBAMCWorkflowSchedulesStreamArn : !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowSchedulesStreamArn" ]
        pRoleLambdaAmcApiInterface : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaAmcApiInterface" ] 
        pRoleLambdaSyncWorkflowStatuses : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaSyncWorkflowStatuses" ] 
        pRoleLambdaWorkflowStatusTrigger : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaWorkflowStatusTrigger" ] 
        pRoleLambdaWorkflowTableTrigger : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaWorkflowTableTrigger" ] 
        pRoleLambdaEventQueueConsumer : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaEventQueueConsumer" ] 
        pRoleLambdaEventQueueProducer : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaEventQueueProducer" ] 
        pRoleLambdaRunWorkFlowByCampaign : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaRunWorkFlowByCampaign" ]
        pRoleLambdaWorkflowScheduleTrigger:  !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaWorkflowScheduleTrigger" ]
        pRoleLambdaCustomerConfigTrigger: !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaCustomerConfigTrigger"]
        pRoleLambdaCustomerConfigQueueConsumer: !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaCustomerConfigQueueConsumer"]
        pRoleLambdaWorkflowLibraryQueueConsumer: !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaWorkflowLibraryQueueConsumer"]
        pAthenaWorkGroup: !GetAtt [ "rAthenaWorkgroupStack", "Outputs.oAthenaWorkGroupName" ]
        pAthenaWorkGroupS3OutputLocation : !GetAtt [ "rAthenaWorkgroupStack", "Outputs.oAthenaWorkGroupS3OutputLocation" ]
        # pCustomerConfigQueue:  !GetAtt ["rSQSStack", "Outputs.oCustomerConfigQueue" ]
        # pWorkflowLibraryQueue:  !GetAtt ["rSQSStack", "Outputs.oWorkflowLibraryQueue" ]
        pAPIGatewayInvokeAMCApiPolicy: !GetAtt [ "rIAMStack", "Outputs.oAPIGatewayInvokeAMCApiPolicy"] 
        pDynamoDBAMCWorkflowLibrary: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowLibrary" ] 
        pDynamoDBAMCWorkflowLibraryStreamArn: !GetAtt [ "rDynamoDBStack", "Outputs.oDynamoDBAMCWorkflowLibraryStreamArn" ]
        pRoleLambdaWorkflowLibraryTrigger : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaWorkflowLibraryTrigger" ]
        pRoleLambdaGenerateExecutionResubmissions : !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaGenerateExecutionResubmissions" ]
        pKMSKeyId: !Ref pKMSKeyId
        pRoleLambdaCustomScheduler: !GetAtt [ "rIAMStack", "Outputs.oRoleLambdaCustomScheduler" ]

        pPowerToolsLibLayer : !Sub '{{resolve:ssm:/SDLF/Lambda/${pTeamName}/PowerTools}}'

      Tags:
        -
          Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]


  ######## CloudWatch #########
  rCloudWatchStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./nested-stacks/template-cloudwatch.yaml
      Parameters:
        pTeamName: !Ref pTeamName
        pMicroserviceName: !Ref pMicroserviceName
        pPipelineName: !Ref pPipelineName
        pLambdaWorkflowExecutionQueueConsumer: !GetAtt [ "rLambdaStack", "Outputs.oLambdaWorkflowExecutionQueueConsumer" ]
        pLambdaAmcApiInterface: !GetAtt [ "rLambdaStack", "Outputs.oLambdaAmcApiInterface" ]
        pLambdaCustomScheduler: !GetAtt [ "rLambdaStack", "Outputs.oLambdaCustomScheduler" ]
      Tags:
        -
          Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pEnvironment]]

# ########## SNS ##########
  rSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pPipelineName, "SNSTopic"]]
      Subscription:
        - Endpoint: !Ref pSnsEmailSubscriber
          Protocol: email
      
      KmsMasterKeyId: !Ref pKMSKeyId
      Tags:
        -
          Key: 'tagging-policy'
          Value: !Join ['-', [!Ref pMicroserviceName, !Ref pTeamName, !Ref pPipelineName, "common"]]
